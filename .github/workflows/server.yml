name: Server pipeline
on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]

jobs:
  deploy:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: user
          POSTGRES_DB: user
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - uses: actions/checkout@v4
        with:
          lfs: 'true'
        env:
          GIT_CURL_VERBOSE: '1'
          GIT_TRACE: '1'
      - uses: actions/setup-node@v3
        with:
          node-version: 20.11.*
      - run: corepack enable
      - name: Install dependencies
        run: yarn install
      - name: Run migrations
        run: |
          cd apps/server 
          yarn db:migrate --host localhost --database user --username user --password user --port 5432 --no-config
      - name: Build
        run: yarn build
      - name: Run Tests
        run: |
          yarn test
        env:
          DATABASE_URL: "postgres://user:user@localhost:5432/user"
