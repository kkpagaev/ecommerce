name: Server pipeline
on:
  push:
    branches:
      - main
    paths:
      - apps/server/**
      - .github/workflows/server.yml
jobs:
  deploy:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: user
          POSTGRES_DB: user
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Set up Go 1.21
        uses: actions/setup-go@v1
        with:
          go-version: '1.21'
      - name: Add GOPATH
        run: |
          export PATH="$PATH:$(go env GOPATH)/bin"
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "PATH=$PATH:$GOPATH/bin" >> $GITHUB_ENV
      - name: install goose
        run: go install github.com/pressly/goose/v3/cmd/goose@latest
      - uses: actions/checkout@v4
        with:
          lfs: 'true'
        env:
          GIT_CURL_VERBOSE: '1'
          GIT_TRACE: '1'
      - name: Run migrations
        run: |
          cd apps/server 
          goose -dir ./migrations/ up
        env:
          GOOSE_DRIVER: postgres
          GOOSE_DBSTRING: 'postgres://user:user@localhost:5432/user'
      - uses: actions/setup-node@v3
        with:
          node-version: 20.11.*
      - run: corepack enable
      - name: Install dependencies
        run: yarn install
      - name: Run Tests
        run: |
          cd apps/server
          yarn test:once
        env:
          DATABASE_URL: "postgres://user:user@localhost:5432/user"
